;
; AR2F8AA  2.1.0m  TONY FORBES  December 1994
;
; a = a^2  (using FFT modulo F_8, dimension 2^10)
;
; xsqufft8A (&a, d, &f);
;
; Registers:   EAX = &a, EDX = d = d(a)
;              EBX = &f, a 9225-digit work area
; Assumptions: 0 <= a < 2^61440, d(a) > 0 
;              a has sufficient room for 3842 digits
;
; Finite Fourier Transform for a => a^2
;
; F = the Fourier base, the Fermat number F_8 = 2^256 + 1
; D = 1024, the dimension of the Fourier transform
; G = 2^192-2^64, a primitive 1024th root of unity modulo F
; M = 2^120, the base for representation of a
;
; F[X](k) = Sum[i=0 to D-1: X(i)G^ki] (mod F)
;
; Fast Fourier Transform
;
; X(D,k,i)      = X(i)
; X(d,k,i)      = X(2d,k,i) + G^dk X(2d,k,i+d)  (mod F)
; X(d,k+D/2d,i) = X(2d,k,i) - G^dk X(2d,k,i+d)  (mod F)
; F[X](k)       = X(1,k,0)
;
; d = D/2, D/4, ..., 1 
; i = 0, 1, ..., d-1
; k = 0, 1, ..., D/2d - 1
;
; Convolution Theorem:  F[(F[X]'.F[X]')] = D X*X,
;
; where  F[X]'  is the permutation of the vector  F[X]
; defined by  F[X]'(0) = F[X](0), F[X]'(i) = F[X](D-i),
; i = 1, 2, ..., D-1.
;
; a   = Sum[i=0 to D/2-1: 2^(iM) X(i)]
; a^2 = Sum[i=0 to D-2: 2^(iM) [X*X](i)]
; 
_DATA   segment dword public 'DATA'
         public _AR2F8Adata
_AR2F8Adata dd 0
         org    _AR2F8Adata
Zcx      dd     0        ; Save ECX
Zbp      dd     0        ; Save EBP
Zsi      dd     0        ; Save ESI
Zdi      dd     0        ; Save EDI
ZYptr    dd     0        ; EAX = &a
ZXptr    dd     0        ; EBX = &f
;
LnF      =      9*4      ; length of F
LnM      =      15       ; length of M
Lyh      =      256*15   ; offset to high order y
Lk0      =      0        ; offset to 128-block 0
Lk1      =      256*9*4  ; offset to 128-block 1
Lk2      =      512*9*4  ; offset to 128-block 2
Lk3      =      768*9*4  ; offset to 128-block 3
Lk4      =      1024*9*4 ; offset to end of FFT array
;
ZU       DD     17 dup (0)
ZWm1     DD     0
ZW       DD     10 dup (0)
;
ZFd      DD     0
ZFe      DD     0
ZFk      DD     0
ZFkd     DD     0
ZFi      DD     0
ZFj      DD     0
ZFX      DD     0
ZSc      DD     0
;
; Bit reversal table, i => LnF * b(i), 
; b(i) = i bit-reversed modulo 1024
Tb  DW   0,18432,9216,27648,4608,23040,13824,32256 
    DW   2304,20736,11520,29952,6912,25344,16128,34560 
    DW   1152,19584,10368,28800,5760,24192,14976,33408 
    DW   3456,21888,12672,31104,8064,26496,17280,35712 
    DW   576,19008,9792,28224,5184,23616,14400,32832 
    DW   2880,21312,12096,30528,7488,25920,16704,35136 
    DW   1728,20160,10944,29376,6336,24768,15552,33984 
    DW   4032,22464,13248,31680,8640,27072,17856,36288 
;
    DW   288,18720,9504,27936,4896,23328,14112,32544 
    DW   2592,21024,11808,30240,7200,25632,16416,34848 
    DW   1440,19872,10656,29088,6048,24480,15264,33696 
    DW   3744,22176,12960,31392,8352,26784,17568,36000 
    DW   864,19296,10080,28512,5472,23904,14688,33120 
    DW   3168,21600,12384,30816,7776,26208,16992,35424 
    DW   2016,20448,11232,29664,6624,25056,15840,34272 
    DW   4320,22752,13536,31968,8928,27360,18144,36576 
;
    DW   144,18576,9360,27792,4752,23184,13968,32400 
    DW   2448,20880,11664,30096,7056,25488,16272,34704 
    DW   1296,19728,10512,28944,5904,24336,15120,33552 
    DW   3600,22032,12816,31248,8208,26640,17424,35856 
    DW   720,19152,9936,28368,5328,23760,14544,32976 
    DW   3024,21456,12240,30672,7632,26064,16848,35280 
    DW   1872,20304,11088,29520,6480,24912,15696,34128 
    DW   4176,22608,13392,31824,8784,27216,18000,36432 
;
    DW   432,18864,9648,28080,5040,23472,14256,32688 
    DW   2736,21168,11952,30384,7344,25776,16560,34992 
    DW   1584,20016,10800,29232,6192,24624,15408,33840 
    DW   3888,22320,13104,31536,8496,26928,17712,36144 
    DW   1008,19440,10224,28656,5616,24048,14832,33264 
    DW   3312,21744,12528,30960,7920,26352,17136,35568 
    DW   2160,20592,11376,29808,6768,25200,15984,34416 
    DW   4464,22896,13680,32112,9072,27504,18288,36720 
;
    DW   72,18504,9288,27720,4680,23112,13896,32328 
    DW   2376,20808,11592,30024,6984,25416,16200,34632 
    DW   1224,19656,10440,28872,5832,24264,15048,33480 
    DW   3528,21960,12744,31176,8136,26568,17352,35784 
    DW   648,19080,9864,28296,5256,23688,14472,32904 
    DW   2952,21384,12168,30600,7560,25992,16776,35208 
    DW   1800,20232,11016,29448,6408,24840,15624,34056 
    DW   4104,22536,13320,31752,8712,27144,17928,36360 
;
    DW   360,18792,9576,28008,4968,23400,14184,32616 
    DW   2664,21096,11880,30312,7272,25704,16488,34920 
    DW   1512,19944,10728,29160,6120,24552,15336,33768 
    DW   3816,22248,13032,31464,8424,26856,17640,36072 
    DW   936,19368,10152,28584,5544,23976,14760,33192 
    DW   3240,21672,12456,30888,7848,26280,17064,35496 
    DW   2088,20520,11304,29736,6696,25128,15912,34344 
    DW   4392,22824,13608,32040,9000,27432,18216,36648 
;
    DW   216,18648,9432,27864,4824,23256,14040,32472 
    DW   2520,20952,11736,30168,7128,25560,16344,34776 
    DW   1368,19800,10584,29016,5976,24408,15192,33624 
    DW   3672,22104,12888,31320,8280,26712,17496,35928 
    DW   792,19224,10008,28440,5400,23832,14616,33048 
    DW   3096,21528,12312,30744,7704,26136,16920,35352 
    DW   1944,20376,11160,29592,6552,24984,15768,34200 
    DW   4248,22680,13464,31896,8856,27288,18072,36504 

;
    DW   504,18936,9720,28152,5112,23544,14328,32760 
    DW   2808,21240,12024,30456,7416,25848,16632,35064 
    DW   1656,20088,10872,29304,6264,24696,15480,33912 
    DW   3960,22392,13176,31608,8568,27000,17784,36216 
    DW   1080,19512,10296,28728,5688,24120,14904,33336 
    DW   3384,21816,12600,31032,7992,26424,17208,35640 
    DW   2232,20664,11448,29880,6840,25272,16056,34488 
    DW   4536,22968,13752,32184,9144,27576,18360,36792 
;
    DW   36,18468,9252,27684,4644,23076,13860,32292 
    DW   2340,20772,11556,29988,6948,25380,16164,34596 
    DW   1188,19620,10404,28836,5796,24228,15012,33444 
    DW   3492,21924,12708,31140,8100,26532,17316,35748 
    DW   612,19044,9828,28260,5220,23652,14436,32868 
    DW   2916,21348,12132,30564,7524,25956,16740,35172 
    DW   1764,20196,10980,29412,6372,24804,15588,34020 
    DW   4068,22500,13284,31716,8676,27108,17892,36324 
;
    DW   324,18756,9540,27972,4932,23364,14148,32580 
    DW   2628,21060,11844,30276,7236,25668,16452,34884 
    DW   1476,19908,10692,29124,6084,24516,15300,33732 
    DW   3780,22212,12996,31428,8388,26820,17604,36036 
    DW   900,19332,10116,28548,5508,23940,14724,33156 
    DW   3204,21636,12420,30852,7812,26244,17028,35460 
    DW   2052,20484,11268,29700,6660,25092,15876,34308 
    DW   4356,22788,13572,32004,8964,27396,18180,36612 
;
    DW   180,18612,9396,27828,4788,23220,14004,32436 
    DW   2484,20916,11700,30132,7092,25524,16308,34740 
    DW   1332,19764,10548,28980,5940,24372,15156,33588 
    DW   3636,22068,12852,31284,8244,26676,17460,35892 
    DW   756,19188,9972,28404,5364,23796,14580,33012 
    DW   3060,21492,12276,30708,7668,26100,16884,35316 
    DW   1908,20340,11124,29556,6516,24948,15732,34164 
    DW   4212,22644,13428,31860,8820,27252,18036,36468 
;
    DW   468,18900,9684,28116,5076,23508,14292,32724 
    DW   2772,21204,11988,30420,7380,25812,16596,35028 
    DW   1620,20052,10836,29268,6228,24660,15444,33876 
    DW   3924,22356,13140,31572,8532,26964,17748,36180 
    DW   1044,19476,10260,28692,5652,24084,14868,33300 
    DW   3348,21780,12564,30996,7956,26388,17172,35604 
    DW   2196,20628,11412,29844,6804,25236,16020,34452 
    DW   4500,22932,13716,32148,9108,27540,18324,36756 
;
    DW   108,18540,9324,27756,4716,23148,13932,32364 
    DW   2412,20844,11628,30060,7020,25452,16236,34668 
    DW   1260,19692,10476,28908,5868,24300,15084,33516 
    DW   3564,21996,12780,31212,8172,26604,17388,35820 
    DW   684,19116,9900,28332,5292,23724,14508,32940 
    DW   2988,21420,12204,30636,7596,26028,16812,35244 
    DW   1836,20268,11052,29484,6444,24876,15660,34092 
    DW   4140,22572,13356,31788,8748,27180,17964,36396 
;
    DW   396,18828,9612,28044,5004,23436,14220,32652 
    DW   2700,21132,11916,30348,7308,25740,16524,34956 
    DW   1548,19980,10764,29196,6156,24588,15372,33804 
    DW   3852,22284,13068,31500,8460,26892,17676,36108 
    DW   972,19404,10188,28620,5580,24012,14796,33228 
    DW   3276,21708,12492,30924,7884,26316,17100,35532 
    DW   2124,20556,11340,29772,6732,25164,15948,34380 
    DW   4428,22860,13644,32076,9036,27468,18252,36684 
;
    DW   252,18684,9468,27900,4860,23292,14076,32508 
    DW   2556,20988,11772,30204,7164,25596,16380,34812 
    DW   1404,19836,10620,29052,6012,24444,15228,33660 
    DW   3708,22140,12924,31356,8316,26748,17532,35964 
    DW   828,19260,10044,28476,5436,23868,14652,33084 
    DW   3132,21564,12348,30780,7740,26172,16956,35388 
    DW   1980,20412,11196,29628,6588,25020,15804,34236 
    DW   4284,22716,13500,31932,8892,27324,18108,36540 
;
    DW   540,18972,9756,28188,5148,23580,14364,32796 
    DW   2844,21276,12060,30492,7452,25884,16668,35100 
    DW   1692,20124,10908,29340,6300,24732,15516,33948 
    DW   3996,22428,13212,31644,8604,27036,17820,36252 
    DW   1116,19548,10332,28764,5724,24156,14940,33372 
    DW   3420,21852,12636,31068,8028,26460,17244,35676 
    DW   2268,20700,11484,29916,6876,25308,16092,34524 
    DW   4572,23004,13788,32220,9180,27612,18396,36828 
;
; Table for controlling X => X^2
;
; X(0)      = X(0)^2, 
; X(D-b(k)) = X(k)^2,  k = 1, 2, ..., D-1
;
; Cycle structure and table for D = 1024
;
; (0) c=1 
; (1,512,1023) c=3 
; (2,768,1021,257,510,514,767,3,256,1022,513,511) c=12 
; (4,896,1017,385,506,642,763,131,252,772,893,261,
;  382,518,639,7,128,1020,769,509,258,766,515,255) c=24 
; (5,384,1018,641,507,130,764,771,253,260,894,517,
;  383,6,640,1019,129,508,770,765,259,254,516,895) c=24 
; (8,960,1009,449,498,706,755,195,244,836,885,325,374,582,631,71,
;  120,904,953,393,442,650,699,139,188,780,829,269,318,526,575,15,
;  64,1016,897,505,386,762,643,251,132,892,773,381,262,638,519,127) c=48 
; (9,448,1010,705,499,194,756,835,245,324,886,581,375,70,632,903,
;  121,392,954,649,443,138,700,779,189,268,830,525,319,14,576,1015,
;  65,504,898,761,387,250,644,891,133,380,774,637,263,126,520,959) c=48 
; (10,704,1011,193,500,834,757,323,246,580,887,69,376,902,633,391,
;  122,648,955,137,444,778,701,267,190,524,831,13,320,1014,577,503,
;  66,760,899,249,388,890,645,379,134,636,775,125,264,958,521,447) c=48 
; (11,192,1012,833,501,322,758,579,247,68,888,901,377,390,634,647,
;  123,136,956,777,445,266,702,523,191,12,832,1013,321,502,578,759,
;  67,248,900,889,389,378,646,635,135,124,776,957,265,446,522,703) c=48 
; (16,992,993,481,482,738,739,227,228,868,869,357,358,614,615,103,
;  104,936,937,425,426,682,683,171,172,812,813,301,302,558,559,47,
;  48,976,977,465,466,722,723,211,212,852,853,341,342,598,599,87,
;  88,920,921,409,410,666,667,155,156,796,797,285,286,542,543,31,
;  32,1008,961,497,450,754,707,243,196,884,837,373,326,630,583,119,
;  72,952,905,441,394,698,651,187,140,828,781,317,270,574,527,63) c=96 
; (17,480,994,737,483,226,740,867,229,356,870,613,359,102,616,935,
;  105,424,938,681,427,170,684,811,173,300,814,557,303,46,560,975,
;  49,464,978,721,467,210,724,851,213,340,854,597,343,86,600,919,
;  89,408,922,665,411,154,668,795,157,284,798,541,287,30,544,1007,
;  33,496,962,753,451,242,708,883,197,372,838,629,327,118,584,951,
;  73,440,906,697,395,186,652,827,141,316,782,573,271,62,528,991) c=96 
; (18,736,995,225,484,866,741,355,230,612,871,101,360,934,617,423,
;  106,680,939,169,428,810,685,299,174,556,815,45,304,974,561,463,
;  50,720,979,209,468,850,725,339,214,596,855,85,344,918,601,407,
;  90,664,923,153,412,794,669,283,158,540,799,29,288,1006,545,495,
;  34,752,963,241,452,882,709,371,198,628,839,117,328,950,585,439,
;  74,696,907,185,396,826,653,315,142,572,783,61,272,990,529,479) c=96 
; (19,224,996,865,485,354,742,611,231,100,872,933,361,422,618,679,
;  107,168,940,809,429,298,686,555,175,44,816,973,305,462,562,719,
;  51,208,980,849,469,338,726,595,215,84,856,917,345,406,602,663,
;  91,152,924,793,413,282,670,539,159,28,800,1005,289,494,546,751,
;  35,240,964,881,453,370,710,627,199,116,840,949,329,438,586,695,
;  75,184,908,825,397,314,654,571,143,60,784,989,273,478,530,735) c=96 
; (20,864,997,353,486,610,743,99,232,932,873,421,362,678,619,167,
;  108,808,941,297,430,554,687,43,176,972,817,461,306,718,563,207,
;  52,848,981,337,470,594,727,83,216,916,857,405,346,662,603,151,
;  92,792,925,281,414,538,671,27,160,1004,801,493,290,750,547,239,
;  36,880,965,369,454,626,711,115,200,948,841,437,330,694,587,183,
;  76,824,909,313,398,570,655,59,144,988,785,477,274,734,531,223) c=96 
; (21,352,998,609,487,98,744,931,233,420,874,677,363,166,620,807,
;  109,296,942,553,431,42,688,971,177,460,818,717,307,206,564,847,
;  53,336,982,593,471,82,728,915,217,404,858,661,347,150,604,791,
;  93,280,926,537,415,26,672,1003,161,492,802,749,291,238,548,879,
;  37,368,966,625,455,114,712,947,201,436,842,693,331,182,588,823,
;  77,312,910,569,399,58,656,987,145,476,786,733,275,222,532,863) c=96 
; (22,608,999,97,488,930,745,419,234,676,875,165,364,806,621,295,
;  110,552,943,41,432,970,689,459,178,716,819,205,308,846,565,335,
;  54,592,983,81,472,914,729,403,218,660,859,149,348,790,605,279,
;  94,536,927,25,416,1002,673,491,162,748,803,237,292,878,549,367,
;  38,624,967,113,456,946,713,435,202,692,843,181,332,822,589,311,
;  78,568,911,57,400,986,657,475,146,732,787,221,276,862,533,351) c=96 
; (23,96,1000,929,489,418,746,675,235,164,876,805,365,294,622,551,
;  111,40,944,969,433,458,690,715,179,204,820,845,309,334,566,591,
;  55,80,984,913,473,402,730,659,219,148,860,789,349,278,606,535,
;  95,24,928,1001,417,490,674,747,163,236,804,877,293,366,550,623,
;  39,112,968,945,457,434,714,691,203,180,844,821,333,310,590,567,
;  79,56,912,985,401,474,658,731,147,220,788,861,277,350,534,607) c=96 
;
Tq  DW   Lk4
    DW   0,Lk4 ; c=1 
    DW   36,18432,36828,Lk4 ; c=3 
    DW   72,27648,36756,9252,18360,18504,27612,108,9216,36792,18468,18396,Lk4 ; c=12 
    DW   144,32256,36612,13860,18216,23112,27468,4716,9072,27792,32148,9396  
    DW   13752,18648,23004,252,4608,36720,27684,18324,9288,27576,18540,9180,Lk4 ; c=24 
    DW   180,13824,36648,23076,18252,4680,27504,27756,9108,9360,32184,18612  
    DW   13788,216,23040,36684,4644,18288,27720,27540,9324,9144,18576,32220,Lk4 ; c=24 
;
    DW   288,34560,36324,16164,17928,25416,27180,7020,8784,30096,31860,11700  
    DW   13464,20952,22716,2556,4320,32544,34308,14148,15912,23400,25164,5004  
    DW   6768,28080,29844,9684,11448,18936,20700,540,2304,36576,32292,18180  
    DW   13896,27432,23148,9036,4752,32112,27828,13716,9432,22968,18684,4572,Lk4 ; c=48 
;
    DW   324,16128,36360,25380,17964,6984,27216,30060,8820,11664,31896,20916  
    DW   13500,2520,22752,32508,4356,14112,34344,23364,15948,4968,25200,28044  
    DW   6804,9648,29880,18900,11484,504,20736,36540,2340,18144,32328,27396  
    DW   13932,9000,23184,32076,4788,13680,27864,22932,9468,4536,18720,34524,Lk4 ; c=48 
;
    DW   360,25344,36396,6948,18000,30024,27252,11628,8856,20880,31932,2484  
    DW   13536,32472,22788,14076,4392,23328,34380,4932,15984,28008,25236,9612  
    DW   6840,18864,29916,468,11520,36504,20772,18108,2376,27360,32364,8964  
    DW   13968,32040,23220,13644,4824,22896,27900,4500,9504,34488,18756,16092,Lk4 ; c=48 
;
    DW   396,6912,36432,29988,18036,11592,27288,20844,8892,2448,31968,32436  
    DW   13572,14040,22824,23292,4428,4896,34416,27972,16020,9576,25272,18828  
    DW   6876,432,29952,36468,11556,18072,20808,27324,2412,8928,32400,32004  
    DW   14004,13608,23256,22860,4860,4464,27936,34452,9540,16056,18792,25308,Lk4 ; c=48
; 
    DW   576,35712,35748,17316,17352,26568,26604,8172,8208,31248,31284,12852  
    DW   12888,22104,22140,3708,3744,33696,33732,15300,15336,24552,24588,6156  
    DW   6192,29232,29268,10836,10872,20088,20124,1692,1728,35136,35172,16740  
    DW   16776,25992,26028,7596,7632,30672,30708,12276,12312,21528,21564,3132  
    DW   3168,33120,33156,14724,14760,23976,24012,5580,5616,28656,28692,10260  
    DW   10296,19512,19548,1116,1152,36288,34596,17892,16200,27144,25452,8748  
    DW   7056,31824,30132,13428,11736,22680,20988,4284,2592,34272,32580,15876  
    DW   14184,25128,23436,6732,5040,29808,28116,11412,9720,20664,18972,2268,Lk4 ; c=96 
;
    DW   612,17280,35784,26532,17388,8136,26640,31212,8244,12816,31320,22068  
    DW   12924,3672,22176,33660,3780,15264,33768,24516,15372,6120,24624,29196  
    DW   6228,10800,29304,20052,10908,1656,20160,35100,1764,16704,35208,25956  
    DW   16812,7560,26064,30636,7668,12240,30744,21492,12348,3096,21600,33084  
    DW   3204,14688,33192,23940,14796,5544,24048,28620,5652,10224,28728,19476  
    DW   10332,1080,19584,36252,1188,17856,34632,27108,16236,8712,25488,31788  
    DW   7092,13392,30168,22644,11772,4248,21024,34236,2628,15840,32616,25092  
    DW   14220,6696,23472,29772,5076,11376,28152,20628,9756,2232,19008,35676,Lk4 ; c=96 
;
    DW   648,26496,35820,8100,17424,31176,26676,12780,8280,22032,31356,3636  
    DW   12960,33624,22212,15228,3816,24480,33804,6084,15408,29160,24660,10764  
    DW   6264,20016,29340,1620,10944,35064,20196,16668,1800,25920,35244,7524  
    DW   16848,30600,26100,12204,7704,21456,30780,3060,12384,33048,21636,14652  
    DW   3240,23904,33228,5508,14832,28584,24084,10188,5688,19440,28764,1044  
    DW   10368,36216,19620,17820,1224,27072,34668,8676,16272,31752,25524,13356  
    DW   7128,22608,30204,4212,11808,34200,21060,15804,2664,25056,32652,6660  
    DW   14256,29736,23508,11340,5112,20592,28188,2196,9792,35640,19044,17244,Lk4 ; c=96 
;
    DW   684,8064,35856,31140,17460,12744,26712,21996,8316,3600,31392,33588  
    DW   12996,15192,22248,24444,3852,6048,33840,29124,15444,10728,24696,19980  
    DW   6300,1584,29376,35028,10980,16632,20232,25884,1836,7488,35280,30564  
    DW   16884,12168,26136,21420,7740,3024,30816,33012,12420,14616,21672,23868  
    DW   3276,5472,33264,28548,14868,10152,24120,19404,5724,1008,28800,36180  
    DW   10404,17784,19656,27036,1260,8640,34704,31716,16308,13320,25560,22572  
    DW   7164,4176,30240,34164,11844,15768,21096,25020,2700,6624,32688,29700  
    DW   14292,11304,23544,20556,5148,2160,28224,35604,9828,17208,19080,26460,Lk4 ; c=96 
;
    DW   720,31104,35892,12708,17496,21960,26748,3564,8352,33552,31428,15156  
    DW   13032,24408,22284,6012,3888,29088,33876,10692,15480,19944,24732,1548  
    DW   6336,34992,29412,16596,11016,25848,20268,7452,1872,30528,35316,12132  
    DW   16920,21384,26172,2988,7776,32976,30852,14580,12456,23832,21708,5436  
    DW   3312,28512,33300,10116,14904,19368,24156,972,5760,36144,28836,17748  
    DW   10440,27000,19692,8604,1296,31680,34740,13284,16344,22536,25596,4140  
    DW   7200,34128,30276,15732,11880,24984,21132,6588,2736,29664,32724,11268  
    DW   14328,20520,23580,2124,5184,35568,28260,17172,9864,26424,19116,8028,Lk4 ; c=96 
;
    DW   756,12672,35928,21924,17532,3528,26784,33516,8388,15120,31464,24372  
    DW   13068,5976,22320,29052,3924,10656,33912,19908,15516,1512,24768,34956  
    DW   6372,16560,29448,25812,11052,7416,20304,30492,1908,12096,35352,21348  
    DW   16956,2952,26208,32940,7812,14544,30888,23796,12492,5400,21744,28476  
    DW   3348,10080,33336,19332,14940,936,24192,36108,5796,17712,28872,26964  
    DW   10476,8568,19728,31644,1332,13248,34776,22500,16380,4104,25632,34092  
    DW   7236,15696,30312,24948,11916,6552,21168,29628,2772,11232,32760,20484  
    DW   14364,2088,23616,35532,5220,17136,28296,26388,9900,7992,19152,31068,Lk4 ; c=96 
;
    DW   792,21888,35964,3492,17568,33480,26820,15084,8424,24336,31500,5940  
    DW   13104,29016,22356,10620,3960,19872,33948,1476,15552,34920,24804,16524  
    DW   6408,25776,29484,7380,11088,30456,20340,12060,1944,21312,35388,2916  
    DW   16992,32904,26244,14508,7848,23760,30924,5364,12528,28440,21780,10044  
    DW   3384,19296,33372,900,14976,36072,24228,17676,5832,26928,28908,8532  
    DW   10512,31608,19764,13212,1368,22464,34812,4068,16416,34056,25668,15660  
    DW   7272,24912,30348,6516,11952,29592,21204,11196,2808,20448,32796,2052  
    DW   14400,35496,23652,17100,5256,26352,28332,7956,9936,31032,19188,12636,Lk4 ; c=96 
;
    DW   828,3456,36000,33444,17604,15048,26856,24300,8460,5904,31536,28980  
    DW   13140,10584,22392,19836,3996,1440,33984,34884,15588,16488,24840,25740  
    DW   6444,7344,29520,30420,11124,12024,20376,21276,1980,2880,35424,32868  
    DW   17028,14472,26280,23724,7884,5328,30960,28404,12564,10008,21816,19260  
    DW   3420,864,33408,36036,15012,17640,24264,26892,5868,8496,28944,31572  
    DW   10548,13176,19800,22428,1404,4032,34848,34020,16452,15624,25704,24876  
    DW   7308,6480,30384,29556,11988,11160,21240,20412,2844,2016,32832,35460  
    DW   14436,17064,23688,26316,5292,7920,28368,30996,9972,12600,19224,21852,Lk4 ; c=96 
;
_DATA   ends
;
_TEXT    segment dword public 'CODE'
         assume  CS:_TEXT
         assume  DS:DGROUP
_AR2F8AA proc    near
;========================================
;
; y => y^2 by Finite Fourier Transform
;
         public xsqufft8A_
xsqufft8A_:
         mov    Zcx,ECX
         mov    Zbp,EBP
         mov    Zsi,ESI
         mov    Zdi,EDI
         mov    ZYptr,EAX            ; &a
         mov    ZXptr,EBX            ; &f (FFT array)
;
; Clear high order digits, if necessary
         lea    EDI,[EAX+EDX*4]      ; First high order digit
         lea    ESI,7680[EAX]        ; Limit
Xfft2:   cmp    EDI,ESI
         jae    Xfft3
         mov    dword ptr [EDI],0
         lea    EDI,4[EDI]
         jmp    Xfft2
Xfft3:
;
; 10-stage Fast Fourier Transform 
         CALL   XfftI      ; d = 512, 256
         MOV    ZFd,128
         MOV    ZFe,4
         MOV    ZFj,128*LnF
         CALL   XfftA
         CALL   XfftR
;
; X^2
         CALL   XfftQ
;
; 10-stage Fast Fourier Transform 
         MOV    ZFd,512
         MOV    ZFe,1
         MOV    ZFj,512*LnF
         CALL   XfftA
         CALL   XfftS
;
; y = x/1024
; X(i)   => y,  i = 0, 1, ..., 1022
; X(1023) is always zero
;
; HHHHGGGGFFFFEEEEDDDDCCCCBBBBAAAA000ihhhhggggffffeeeeddddccccbbbbaaaa
; MOV Y,X+1                       0000ihhhhggggffffeeeeddddccccbbbbaaa
;                                   eeeeddddccccbbbbaaaa    ADD/ADC
;                   000ihhhhggggffff                        ADC 0, MOV
;                    eeeeddddccccbbbbaaaa                   ADD/ADC
;    000ihhhhggggffff                                       ADC 0, MOV
;
         mov    ESI,ZXptr
         mov    EDI,ZYptr
         MOV    EAX,0[ESI]
         MOV    EDX,4[ESI]
;
         SHRD   EAX,EDX,10
         MOV    EBX,8[ESI]
         MOV    0[EDI],EAX
         SHRD   EDX,EBX,10
         MOV    EAX,12[ESI]
         MOV    4[EDI],EDX
         SHRD   EBX,EAX,10
         MOV    EDX,16[ESI]
         MOV    8[EDI],EBX
;
         SHRD   EAX,EDX,10
         MOV    EBX,20[ESI]
         MOV    12[EDI],EAX
         SHRD   EDX,EBX,10
         MOV    EAX,24[ESI]
         MOV    16[EDI],EDX
         SHRD   EBX,EAX,10
         MOV    EDX,28[ESI]
         MOV    20[EDI],EBX
;
         SHRD   EAX,EDX,10
         MOV    EBX,32[ESI]
         MOV    24[EDI],EAX
         SHRD   EDX,EBX,10
         MOV    dword ptr 32[EDI],0
         MOV    28[EDI],EDX
;
         MOV    EBP,2
         add    EDI,LnM
Xfft6:   MOV    SI,Tb[EBP]
         AND    ESI,0FFFFh
         add    ESI,ZXptr
         MOV    EAX,0[ESI]
         MOV    EDX,4[ESI]
;
         SHRD   EAX,EDX,10
         MOV    EBX,8[ESI]
         MOV    ZU+0,EAX
         SHRD   EDX,EBX,10
         MOV    EAX,12[ESI]
         MOV    ZU+4,EDX
         SHRD   EBX,EAX,10
         MOV    EDX,16[ESI]
         MOV    ZU+8,EBX
;
         SHRD   EAX,EDX,10
         MOV    EBX,20[ESI]
         MOV    ZU+12,EAX
         SHRD   EDX,EBX,10
         MOV    EAX,24[ESI]
         MOV    ZU+16,EDX
         SHRD   EBX,EAX,10
         MOV    EDX,28[ESI]
         MOV    ZU+20,EBX
;
         SHRD   EAX,EDX,10
         MOV    EBX,32[ESI]
         MOV    ZU+24,EAX
         SHRD   EDX,EBX,10
         MOV    EAX,ZU+0
         MOV    ZU+28,EDX
;
         MOV    EBX,ZU+4
         MOV    ECX,ZU+8
         ADD    EAX,0[EDI]
         MOV    EDX,ZU+12
         ADC    EBX,4[EDI]
         MOV    0[EDI],EAX
         ADC    ECX,8[EDI]
         MOV    4[EDI],EBX
         ADC    EDX,12[EDI]
         MOV    8[EDI],ECX
         MOV    12[EDI],EDX
;
         MOV    EAX,ZU+16
         MOV    EBX,ZU+20
         MOV    ECX,ZU+24
         ADC    EAX,16[EDI]
         MOV    EDX,ZU+28
         ADC    EBX,0
         MOV    16[EDI],EAX
         ADC    ECX,0
         MOV    20[EDI],EBX
         ADC    EDX,0
         MOV    24[EDI],ECX
         MOV    28[EDI],EDX
;
         MOV    dword ptr 32[EDI],0
         ADD    EBP,2
         ADD    EDI,LnM
         CMP    EBP,2*1022
         JLE    Xfft6
;
         mov    EDI,Zdi
         mov    ESI,Zsi
         mov    EBP,Zbp
         mov    ECX,Zcx
         retn   
;========================================
; FFT special first step: y => X, d = 256
;
; X(256,0,i) = y(i) +       y(i+256)
; X(256,1,i) = y(i) + G^256 y(i+256)
; X(256,2,i) = y(i) -       y(i+256)
; X(256,3,i) = y(i) - G^256 y(i+256)
;
; i = 0, 1, ..., 255
;
; 0 <= y(i) < 2^120
;
XfftI:   mov    ESI,ZYptr
         mov    EDI,ZXptr
         add    ESI,255*LnM
         add    EDI,255*LnF
;
; Pick up high order words
XfftId:  MOV    ECX,12[ESI]
         MOV    EDX,12+Lyh[ESI]
         AND    ECX,00FFFFFFh           ; ECX = y3(i)
         AND    EDX,00FFFFFFh           ; EDX = y3(i+d)
;
; X(256,2,i) = y(i) - y(i+256)  [at offset Lk1]
; X(256,3,i) = y(i)
; -2^120 < X(256,2,i) < 2^120
         MOV    EAX,0[ESI]              ; EAX = y0(i)
         MOV    EBX,4[ESI]              ; EBX = y1(i)
         MOV    EBP,8[ESI]              ; EBP = y2(i)
         MOV    0+Lk3[EDI],EAX          ; y0(i)
         MOV    4+Lk3[EDI],EBX          ; y1(i)
         SUB    EAX,0+Lyh[ESI]          ; EAX = y0(i) - y0(i+d)
         MOV    8+Lk3[EDI],EBP          ; y2(i)
         SBB    EBX,4+Lyh[ESI]          ; EBX = y1(i) - y1(i+d)
         MOV    0+Lk1[EDI],EAX          ; y0(i) - y0(i+d)
         SBB    EBP,8+Lyh[ESI]          ; EBP = y2(i) - y2(i+d)
         MOV    4+Lk1[EDI],EBX          ; y1(i) - y1(i+d)
;
         MOV    EAX,ECX                 ; EAX = y3(i)
         MOV    EBX,0
         SBB    EAX,EDX                 ; EAX = y3(i) - y3(i+d)
         MOV    12+Lk3[EDI],ECX         ; y3(i)
         SBB    EBX,0                   ; EBX = carry
         MOV    8+Lk1[EDI],EBP          ; y2(i) - y2(i+d)
         MOV    12+Lk1[EDI],EAX         ; y3(i) - y3(i+d)
         MOV    16+Lk1[EDI],EBX         ; carry
         MOV    20+Lk1[EDI],EBX         ; carry
         MOV    24+Lk1[EDI],EBX         ; carry
         MOV    28+Lk1[EDI],EBX         ; carry
         MOV    32+Lk1[EDI],EBX         ; carry
;
; X(256,0,i) = y(i) +       y(i+256)
; X(256,1,i) = y(i) + G^256 y(i+256)  [at offset Lk2]
; 0 <= X(256,0,i) < 2^121
; 0 <= X(256,1,i) < 2^248
         MOV    EAX,0[ESI]              ; y0(i)
         MOV    EBX,0+Lyh[ESI]          ; y0(i+d)
         MOV    0+Lk2[EDI],EAX          ; y0(i)
         MOV    16+Lk2[EDI],EBX         ; y0(i+d)
         ADD    EAX,EBX
         MOV    dword ptr 16+Lk0[EDI],0
         MOV    0+Lk0[EDI],EAX          ; y0(i) + y0(i+d)
         MOV    dword ptr 20+Lk0[EDI],0
;
         MOV    EAX,4[ESI]              ; y1(i)
         MOV    EBX,4+Lyh[ESI]          ; y1(i+d)
         MOV    4+Lk2[EDI],EAX          ; y1(i)
         MOV    20+Lk2[EDI],EBX         ; y1(i+d)
         ADC    EAX,EBX
         MOV    dword ptr 24+Lk0[EDI],0
         MOV    4+Lk0[EDI],EAX          ; y1(i) + y1(i+d)
         MOV    dword ptr 28+Lk0[EDI],0
;
         MOV    EAX,8[ESI]              ; y2(i)
         MOV    EBX,8+Lyh[ESI]          ; y2(i+d)
         MOV    8+Lk2[EDI],EAX          ; y2(i)
         MOV    24+Lk2[EDI],EBX         ; y2(i+d)
         ADC    EAX,EBX
         MOV    dword ptr 32+Lk0[EDI],0
         MOV    8+Lk0[EDI],EAX          ; y2(i) + y2(i+d)
;
         MOV    12+Lk2[EDI],ECX         ; y3(i)
         MOV    28+Lk2[EDI],EDX         ; y3(i+d)
         ADC    ECX,EDX
         MOV    dword ptr 32+Lk2[EDI],0
         MOV    12+Lk0[EDI],ECX         ; y3(i) + y3(i+d)
;
; Subtract  G^256 y(i+256)  from  X(256,3,i)
; -2^248 < X(256,3,i) < 2^120
         MOV    EAX,0
         MOV    EBX,0
         SUB    EAX,0+Lyh[ESI]          ; EAX = -y0(i+d)
         MOV    EBP,0
         SBB    EBX,4+Lyh[ESI]          ; EBX = -y1(i+d)
         MOV    16+Lk3[EDI],EAX         ; -y0(i+d)
         SBB    EBP,8+Lyh[ESI]          ; EBP = -y2(i+d)
         MOV    20+Lk3[EDI],EBX         ; -y1(i+d)
         MOV    EAX,0
         MOV    EBX,0
         SBB    EAX,EDX                 ; EAX = -y3(i+d)
         MOV    24+Lk3[EDI],EBP         ; -y2(i+d)
         SBB    EBX,0                   ; EBX = carry
         MOV    28+Lk3[EDI],EAX         ; -y3(i+d)
         MOV    32+Lk3[EDI],EBX         ; carry
; Next i
         mov    EAX,ZXptr
         SUB    EDI,LnF  
         SUB    ESI,LnM  
         cmp    EDI,EAX
         JNB    XfftId
         RETN
;====================================================
; FFT general step
;
; X(d,k,i)   = X(2d,k,i) + G^(kd) X(2d,k,i+d)
; X(d,k+e,i) = X(2d,k,i) - G^(kd) X(2d,k,i+d)
;
; k = 0, ..., e-1,  i = 0, ..., d-1
;
; ZFd = d, ZFe = e, ZFj = offset to X(2d,k,i+d)
; ZFk = k,          ZFi = counter for i
;
         ALIGN  4
XfftAj   DD     XfftA00
         DD     XfftA01
         DD     XfftA02
         DD     XfftA03
         DD     XfftA04
         DD     XfftA05
         DD     XfftA06
         DD     XfftA07
         DD     XfftA08
         DD     XfftA09
         DD     XfftA10
         DD     XfftA11
         DD     XfftA12
         DD     XfftA13
         DD     XfftA14
         DD     XfftA15
         DD     XfftA16
         DD     XfftA17
         DD     XfftA18
         DD     XfftA19
         DD     XfftA20
         DD     XfftA21
         DD     XfftA22
         DD     XfftA23
         DD     XfftA24
         DD     XfftA25
         DD     XfftA26
         DD     XfftA27
         DD     XfftA28
         DD     XfftA29
         DD     XfftA30
         DD     XfftA31
XfftA:   MOV    ZFk,0          ; k
         MOV    ZFkd,0         ; kd
XfftAb:  MOV    EBX,ZFk        ; EBX = k
         MOV    EBP,ZFkd       ; EBP = kd
         MOV    DI,Tb[EBX*2]   ;  DI = LnF * (k bit-reversed)
         SHR    EBP,4          ; EBP = [kd/16]
         AND    EDI,0FFFFh     
         MOV    EAX,ZFd        ; d
         add    EDI,ZXptr      ; EDI -> X(2d,k,i)
         MOV    EBX,XfftAj[EBP*4]
         MOV    ZFi,EAX        ; counter for i
         MOV    ZFX,EBX        ; EBX = code offset for [kd/8]
;
XfftAd:  MOV    ESI,ZFj
         ADD    ESI,EDI        ; ESI -> X(2d,k,i+d)
         MOV    EBX,ZFX
         MOV    EDX,32[ESI]
         XOR    EAX,EAX        ; EAX = 0
         SAR    EDX,31         ; EDX = sign
         JMP    EBX
; X(d,k+e,i) = X(2d,k,i) - G^kd X(2d,k,i+d)
XfftAsub:
         MOV    EAX,0[EDI]
         MOV    EDX,ZW+0
         MOV    EBX,4[EDI]
         SUB    EAX,EDX
         MOV    EDX,ZW+4
         MOV    ECX,8[EDI]
         SBB    EBX,EDX
         MOV    EDX,ZW+8
         MOV    0[ESI],EAX
         SBB    ECX,EDX
         MOV    4[ESI],EBX
         MOV    8[ESI],ECX
;
         MOV    EAX,12[EDI]
         MOV    EDX,ZW+12
         MOV    EBX,16[EDI]
         SBB    EAX,EDX
         MOV    EDX,ZW+16
         MOV    ECX,20[EDI]
         SBB    EBX,EDX
         MOV    EDX,ZW+20
         MOV    12[ESI],EAX
         SBB    ECX,EDX
         MOV    16[ESI],EBX
         MOV    20[ESI],ECX
;
         MOV    EAX,24[EDI]
         MOV    EDX,ZW+24
         MOV    EBX,28[EDI]
         SBB    EAX,EDX
         MOV    EDX,ZW+28
         MOV    ECX,32[EDI]
         SBB    EBX,EDX
         MOV    EDX,ZW+32
         MOV    24[ESI],EAX
         SBB    ECX,EDX
         MOV    28[ESI],EBX
         MOV    32[ESI],ECX
; X(d,k,i) = X(2d,k,i) + G^kd X(2d,k,i+d)
         MOV    EAX,ZW+0
         MOV    EDX,0[EDI]
         MOV    EBX,ZW+4
         ADD    EAX,EDX
         MOV    EDX,4[EDI]
         MOV    ECX,ZW+8
         ADC    EBX,EDX
         MOV    EDX,8[EDI]
         MOV    0[EDI],EAX
         ADC    ECX,EDX
         MOV    4[EDI],EBX
         MOV    8[EDI],ECX
;
         MOV    EAX,ZW+12
         MOV    EDX,12[EDI]
         MOV    EBX,ZW+16
         ADC    EAX,EDX
         MOV    EDX,16[EDI]
         MOV    ECX,ZW+20
         ADC    EBX,EDX
         MOV    EDX,20[EDI]
         MOV    12[EDI],EAX
         ADC    ECX,EDX
         MOV    16[EDI],EBX
         MOV    20[EDI],ECX
;
         MOV    EAX,ZW+24
         MOV    EDX,24[EDI]
         MOV    EBX,ZW+28
         ADC    EAX,EDX
         MOV    EDX,28[EDI]
         MOV    ECX,ZW+32
         ADC    EBX,EDX
         MOV    EDX,32[EDI]
         MOV    24[EDI],EAX
         ADC    ECX,EDX
         MOV    28[EDI],EBX
         MOV    32[EDI],ECX
; Next i
         MOV    EAX,ZFi
         ADD    EDI,LnF
         DEC    EAX
         MOV    ZFi,EAX
         JNZ    XfftAd
; Next k
         MOV    EAX,ZFk         ; EAX = ZFk
         MOV    EDX,ZFd         ; EDX = ZFd
         MOV    EBX,ZFkd        ; EBX = ZFkd
         MOV    ECX,ZFe         ; ECX = ZFe
         INC    EAX
         ADD    EBX,EDX
         MOV    ZFk,EAX         ; k  = k + 1
         MOV    ZFkd,EBX        ; kd = kd + d
         CMP    EAX,ECX
         JL     XfftAb
; Next stage
         MOV    EAX,ZFe
         MOV    EBX,ZFj
         MOV    ECX,ZFd
         SHL    EAX,1
         SHR    EBX,1
         SHR    ECX,1
         MOV    ZFe,EAX
         MOV    ZFj,EBX
         MOV    ZFd,ECX
         JNZ    XfftA
         RETN
;
; W = X(2d,k,i+d),  [kd/16] = 0
XfftA00:
         MOV    EAX,0[ESI]
         MOV    EBX,4[ESI]
         MOV    ECX,8[ESI]
         MOV    ZW+0,EAX
         MOV    ZW+4,EBX
         MOV    ZW+8,ECX
;
         MOV    EAX,12[ESI]
         MOV    EBX,16[ESI]
         MOV    ECX,20[ESI]
         MOV    ZW+12,EAX
         MOV    ZW+16,EBX
         MOV    ZW+20,ECX
;
         MOV    EAX,24[ESI]
         MOV    EBX,28[ESI]
         MOV    ECX,32[ESI]
         MOV    ZW+24,EAX
         MOV    ZW+28,EBX
         MOV    EAX,ZFkd
         MOV    ZW+32,ECX
;
         TEST   AL,15
         JZ     XfftAsub
;
; W = G^(kd-[kd/16]*16) W = G^kd X(2d,k,i+d)
XfftAshl:
         MOV    ECX,ZFkd
         MOV    EAX,ZW+32
         SHR    CL,1
         MOV    EDX,ZW+28
         AND    CL,7
         JZ     XfftAodd
;
         SHLD   EAX,EDX,CL
         MOV    EBX,ZW+24
         MOV    ZW+32,EAX
         SHLD   EDX,EBX,CL
         MOV    EAX,ZW+20
         MOV    ZW+28,EDX
         SHLD   EBX,EAX,CL
         MOV    EDX,ZW+16
         MOV    ZW+24,EBX
;
         SHLD   EAX,EDX,CL
         MOV    EBX,ZW+12
         MOV    ZW+20,EAX
         SHLD   EDX,EBX,CL
         MOV    EAX,ZW+8
         MOV    ZW+16,EDX
         SHLD   EBX,EAX,CL
         MOV    EDX,ZW+4
         MOV    ZW+12,EBX
;
         SHLD   EAX,EDX,CL
         MOV    EBX,ZW+0
         MOV    ZW+8,EAX
         SHLD   EDX,EBX,CL
         MOV    ZW+4,EDX
         SHL    EBX,CL
         MOV    EAX,ZFkd
         MOV    ZW+0,EBX
         TEST   AL,1
         JZ     XfftAsub
;
; W = G^kd X(2d,k,i+d) = W*(2^192 - 2^64) (mod F), 
; kd = 1 (mod 16)
;
;  0:          -  8 + 24 
;  4:          - 12 + 28 
;  8:     -  0 - 16 + 32 
; 12:     -  4 - 20 
; 16:     -  8 - 24 
; 20:     - 12 - 28 
; 24: + 0 - 16 - 32 
; 28: + 4 - 20 
;
XfftAodd:
         MOV    EDX,ZW+32
         SAR    EDX,31       ; Sign
         MOV    EBP,0        ; Carry
;
         MOV    EAX,ZW+24    
         MOV    EBX,ZW+28
         MOV    ZU+0,EAX     ; U0 = W6
         MOV    ZU+4,EBX     ; U4 = W7
;
         MOV    EAX,ZW+32
         MOV    EBX,EDX
         SUB    EAX,ZW+0
         MOV    ECX,EDX
         SBB    EBX,ZW+4
         MOV    ZU+8,EAX     ; U2 = W8 - W0
         SBB    ECX,ZW+8
         MOV    ZU+12,EBX    ; U3 = S - W1
         MOV    ZU+16,ECX    ; U4 = S - W2
;
         MOV    EAX,EDX
         MOV    EBX,EDX
         SBB    EAX,ZW+12
         MOV    ECX,EDX
         SBB    EBX,ZW+16
         MOV    ZU+20,EAX    ; U5 = S - W3
         SBB    ECX,ZW+20
         MOV    ZU+24,EBX    ; U6 = S - W4
         MOV    ZU+28,ECX    ; U7 = S - W5
         SBB    EBP,0        ; Carry
;
         MOV    EAX,ZW+0
         MOV    EBX,ZW+4
         ADD    ZU+24,EAX    ; U6 = U6 + W0
         ADC    ZU+28,EBX    ; U7 = U7 + W1
;
         MOV    EBX,ZU+0
         ADC    EBP,0        ; Carry
         MOV    ECX,ZU+4
         SUB    EBX,ZW+8
         SBB    ECX,ZW+12
         MOV    ZW+0,EBX     ; W0 = U0 - W2
         MOV    ZW+4,ECX     ; W1 = U1 - W3
;
         MOV    EAX,ZU+8
         MOV    EBX,ZU+12
         SBB    EAX,ZW+16
         MOV    ECX,ZU+16
         SBB    EBX,ZW+20
         MOV    ZW+8,EAX     ; W2 = U2 - W4
         SBB    ECX,ZW+24
         MOV    ZW+12,EBX    ; W3 = U3 - W5
         MOV    ZW+16,ECX    ; W4 = U4 - W6

         MOV    EAX,ZU+20
         MOV    EBX,ZU+24
         SBB    EAX,ZW+28
         MOV    ECX,ZU+28
         SBB    EBX,ZW+32
         MOV    ZW+20,EAX    ; W5 = U5 - W7
         SBB    ECX,EDX
         MOV    ZW+24,EBX    ; W6 = U6 - W8
         MOV    ZW+28,ECX    ; W7 = U7 - S
         SBB    EBP,0        ; Carry
;
         MOV    ZW+32,EBP
         JMP    XfftAsub
;
; W = G^16 X(2d,k,i+d),  [kd/16] = 1
XfftA01:
         MOV    ECX,28[ESI]
         MOV    EBP,28[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0[ESI]
         MOV    ZW-3,EAX
         MOV    EAX,32[ESI]
         MOV    ECX,4[ESI]
         SBB    EBX,EAX
         MOV    EAX,8[ESI]
         SBB    ECX,EDX
         MOV    ZW+1,EBX
         MOV    ZW+5,ECX
;
         MOV    EBX,12[ESI]
         SBB    EAX,EDX
         MOV    ECX,16[ESI]
         SBB    EBX,EDX
         MOV    ZW+9,EAX
         SBB    ECX,EDX
         MOV    ZW+13,EBX
         MOV    ZW+17,ECX
;
         MOV    EAX,20[ESI]
         MOV    EBX,24[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+21,EAX
         SBB    EBP,EDX
         MOV    ZW+25,EBX
         SBB    ECX,EDX
         MOV    ZW+29,EBP
         MOV    EAX,ZFkd
         MOV    ZW+33,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^32 X(2d,k,i+d),  [kd/16] = 2
XfftA02: 
         MOV    ECX,28[ESI]
         MOV    EBP,28[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0[ESI]
         MOV    ZW-2,EAX
         MOV    EAX,32[ESI]
         MOV    ECX,4[ESI]
         SBB    EBX,EAX
         MOV    EAX,8[ESI]
         SBB    ECX,EDX
         MOV    ZW+2,EBX
         MOV    ZW+6,ECX
;
         MOV    EBX,12[ESI]
         SBB    EAX,EDX
         MOV    ECX,16[ESI]
         SBB    EBX,EDX
         MOV    ZW+10,EAX
         SBB    ECX,EDX
         MOV    ZW+14,EBX
         MOV    ZW+18,ECX
;
         MOV    EAX,20[ESI]
         MOV    EBX,24[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+22,EAX
         SBB    EBP,EDX
         MOV    ZW+26,EBX
         SBB    ECX,EDX
         MOV    ZW+30,EBP
         MOV    EAX,ZFkd
         MOV    ZW+34,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^48 X(2d,k,i+d),  [kd/16] = 3
XfftA03: 
         MOV    ECX,28[ESI]
         MOV    EBP,28[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0[ESI]
         MOV    ZW-1,EAX
         MOV    EAX,32[ESI]
         MOV    ECX,4[ESI]
         SBB    EBX,EAX
         MOV    EAX,8[ESI]
         SBB    ECX,EDX
         MOV    ZW+3,EBX
         MOV    ZW+7,ECX
;
         MOV    EBX,12[ESI]
         SBB    EAX,EDX
         MOV    ECX,16[ESI]
         SBB    EBX,EDX
         MOV    ZW+11,EAX
         SBB    ECX,EDX
         MOV    ZW+15,EBX
         MOV    ZW+19,ECX
;
         MOV    EAX,20[ESI]
         MOV    EBX,24[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+23,EAX
         SBB    EBP,EDX
         MOV    ZW+27,EBX
         SBB    ECX,EDX
         MOV    ZW+31,EBP
         MOV    EAX,ZFkd
         MOV    ZW+35,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^64 X(2d,k,i+d),  [kd/16] = 4
XfftA04:
         MOV    EBP,28[ESI]
         MOV    EBX,0[ESI]
         SUB    EAX,EBP
         MOV    EBP,32[ESI]
         MOV    ECX,4[ESI]
         SBB    EBX,EBP
         MOV    ZW+0,EAX
         SBB    ECX,EDX
         MOV    ZW+4,EBX
         MOV    ZW+8,ECX
;
         MOV    EAX,8[ESI]
         MOV    EBX,12[ESI]
         SBB    EAX,EDX
         MOV    ECX,16[ESI]
         SBB    EBX,EDX
         MOV    ZW+12,EAX
         SBB    ECX,EDX
         MOV    ZW+16,EBX
         MOV    ZW+20,ECX
;
         MOV    EAX,20[ESI]
         MOV    EBX,24[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+24,EAX
         SBB    ECX,EDX
         MOV    ZW+28,EBX
         MOV    EAX,ZFkd
         MOV    ZW+32,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^80 X(2d,k,i+d),  [kd/16] = 5
XfftA05:
         MOV    ECX,24[ESI]
         MOV    EBP,24[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-3,EAX
         MOV    EAX,28[ESI]
         MOV    ECX,0[ESI]
         SBB    EBX,EAX
         MOV    EAX,32[ESI]
         MOV    ZW+1,EBX
         SBB    ECX,EAX
         MOV    EAX,4[ESI]
         MOV    ZW+5,ECX
;
         MOV    EBX,8[ESI]
         SBB    EAX,EDX
         MOV    ECX,12[ESI]
         SBB    EBX,EDX
         MOV    ZW+9,EAX
         SBB    ECX,EDX
         MOV    ZW+13,EBX
         MOV    ZW+17,ECX
;
         MOV    EAX,16[ESI]
         MOV    EBX,20[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+21,EAX
         SBB    EBP,EDX
         MOV    ZW+25,EBX
         SBB    ECX,EDX
         MOV    ZW+29,EBP
         MOV    EAX,ZFkd
         MOV    ZW+33,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^96 X(2d,k,i+d),  [kd/16] = 6
XfftA06: 
         MOV    ECX,24[ESI]
         MOV    EBP,24[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-2,EAX
         MOV    EAX,28[ESI]
         MOV    ECX,0[ESI]
         SBB    EBX,EAX
         MOV    EAX,32[ESI]
         MOV    ZW+2,EBX
         SBB    ECX,EAX
         MOV    EAX,4[ESI]
         MOV    ZW+6,ECX
;
         MOV    EBX,8[ESI]
         SBB    EAX,EDX
         MOV    ECX,12[ESI]
         SBB    EBX,EDX
         MOV    ZW+10,EAX
         SBB    ECX,EDX
         MOV    ZW+14,EBX
         MOV    ZW+18,ECX
;
         MOV    EAX,16[ESI]
         MOV    EBX,20[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+22,EAX
         SBB    EBP,EDX
         MOV    ZW+26,EBX
         SBB    ECX,EDX
         MOV    ZW+30,EBP
         MOV    EAX,ZFkd
         MOV    ZW+34,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^112 X(2d,k,i+d),  [kd/16] = 7
XfftA07: 
         MOV    ECX,24[ESI]
         MOV    EBP,24[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-1,EAX
         MOV    EAX,28[ESI]
         MOV    ECX,0[ESI]
         SBB    EBX,EAX
         MOV    EAX,32[ESI]
         MOV    ZW+3,EBX
         SBB    ECX,EAX
         MOV    EAX,4[ESI]
         MOV    ZW+7,ECX
;
         MOV    EBX,8[ESI]
         SBB    EAX,EDX
         MOV    ECX,12[ESI]
         SBB    EBX,EDX
         MOV    ZW+11,EAX
         SBB    ECX,EDX
         MOV    ZW+15,EBX
         MOV    ZW+19,ECX
;
         MOV    EAX,16[ESI]
         MOV    EBX,20[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+23,EAX
         SBB    EBP,EDX
         MOV    ZW+27,EBX
         SBB    ECX,EDX
         MOV    ZW+31,EBP
         MOV    EAX,ZFkd
         MOV    ZW+35,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^128 X(2d,k,i+d),  [kd/16] = 8
XfftA08:
         MOV    EBX,0
         MOV    EBP,24[ESI]
         SUB    EAX,EBP
         MOV    EBP,28[ESI]
         MOV    ECX,0[ESI]
         SBB    EBX,EBP
         MOV    EBP,32[ESI]
         MOV    ZW+0,EAX
         SBB    ECX,EBP
         MOV    ZW+4,EBX
         MOV    ZW+8,ECX
;
         MOV    EAX,4[ESI]
         MOV    EBX,8[ESI]
         SBB    EAX,EDX
         MOV    ECX,12[ESI]
         SBB    EBX,EDX
         MOV    ZW+12,EAX
         SBB    ECX,EDX
         MOV    ZW+16,EBX
         MOV    ZW+20,ECX
;
         MOV    EAX,16[ESI]
         MOV    EBX,20[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+24,EAX
         SBB    ECX,EDX
         MOV    ZW+28,EBX
         MOV    EAX,ZFkd
         MOV    ZW+32,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^144 X(2d,k,i+d),  [kd/16] = 9
XfftA09:
         MOV    ECX,20[ESI]
         MOV    EBP,20[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-3,EAX
         MOV    EAX,24[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,28[ESI]
         MOV    ZW+1,EBX
         SBB    ECX,EAX
         MOV    EAX,0[ESI]
         MOV    ZW+5,ECX
;
         MOV    ECX,32[ESI]
         MOV    EBX,4[ESI]
         SBB    EAX,ECX
         MOV    ECX,8[ESI]
         SBB    EBX,EDX
         MOV    ZW+9,EAX
         SBB    ECX,EDX
         MOV    ZW+13,EBX
         MOV    ZW+17,ECX
;
         MOV    EAX,12[ESI]
         MOV    EBX,16[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+21,EAX
         SBB    EBP,EDX
         MOV    ZW+25,EBX
         SBB    ECX,EDX
         MOV    ZW+29,EBP
         MOV    EAX,ZFkd
         MOV    ZW+33,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^160 X(2d,k,i+d),  [kd/16] = 10
XfftA10: 
         MOV    ECX,20[ESI]
         MOV    EBP,20[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-2,EAX
         MOV    EAX,24[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,28[ESI]
         MOV    ZW+2,EBX
         SBB    ECX,EAX
         MOV    EAX,0[ESI]
         MOV    ZW+6,ECX
;
         MOV    ECX,32[ESI]
         MOV    EBX,4[ESI]
         SBB    EAX,ECX
         MOV    ECX,8[ESI]
         SBB    EBX,EDX
         MOV    ZW+10,EAX
         SBB    ECX,EDX
         MOV    ZW+14,EBX
         MOV    ZW+18,ECX
;
         MOV    EAX,12[ESI]
         MOV    EBX,16[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+22,EAX
         SBB    EBP,EDX
         MOV    ZW+26,EBX
         SBB    ECX,EDX
         MOV    ZW+30,EBP
         MOV    EAX,ZFkd
         MOV    ZW+34,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^176 X(2d,k,i+d),  [kd/16] = 11
XfftA11: 
         MOV    ECX,20[ESI]
         MOV    EBP,20[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-1,EAX
         MOV    EAX,24[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,28[ESI]
         MOV    ZW+3,EBX
         SBB    ECX,EAX
         MOV    EAX,0[ESI]
         MOV    ZW+7,ECX
;
         MOV    ECX,32[ESI]
         MOV    EBX,4[ESI]
         SBB    EAX,ECX
         MOV    ECX,8[ESI]
         SBB    EBX,EDX
         MOV    ZW+11,EAX
         SBB    ECX,EDX
         MOV    ZW+15,EBX
         MOV    ZW+19,ECX
;
         MOV    EAX,12[ESI]
         MOV    EBX,16[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+23,EAX
         SBB    EBP,EDX
         MOV    ZW+27,EBX
         SBB    ECX,EDX
         MOV    ZW+31,EBP
         MOV    EAX,ZFkd
         MOV    ZW+35,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^192 X(2d,k,i+d),  [kd/16] = 12
XfftA12:
         MOV    EBP,20[ESI]
         MOV    EBX,0
         SUB    EAX,EBP
         MOV    EBP,24[ESI]
         MOV    ECX,0
         SBB    EBX,EBP
         MOV    EBP,28[ESI]
         MOV    ZW+0,EAX
         SBB    ECX,EBP
         MOV    ZW+4,EBX
         MOV    ZW+8,ECX
;
         MOV    EAX,0[ESI]
         MOV    EBP,32[ESI]
         MOV    EBX,4[ESI]
         SBB    EAX,EBP
         MOV    ECX,8[ESI]
         SBB    EBX,EDX
         MOV    ZW+12,EAX
         SBB    ECX,EDX
         MOV    ZW+16,EBX
         MOV    ZW+20,ECX
;
         MOV    EAX,12[ESI]
         MOV    EBX,16[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+24,EAX
         SBB    ECX,EDX
         MOV    ZW+28,EBX
         MOV    EAX,ZFkd
         MOV    ZW+32,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^208 X(2d,k,i+d),  [kd/16] = 13
XfftA13:
         MOV    ECX,16[ESI]
         MOV    EBP,16[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-3,EAX
         MOV    EAX,20[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,24[ESI]
         MOV    ZW+1,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+5,ECX
;
         MOV    ECX,28[ESI]
         MOV    EBX,0[ESI]
         SBB    EAX,ECX
         MOV    ECX,4[ESI]
         MOV    ZW+9,EAX
         MOV    EAX,32[ESI]
         SBB    EBX,EAX
         MOV    EAX,8[ESI]
         SBB    ECX,EDX
         MOV    ZW+13,EBX
         MOV    ZW+17,ECX
;
         MOV    EBX,12[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+21,EAX
         SBB    EBP,EDX
         MOV    ZW+25,EBX
         SBB    ECX,EDX
         MOV    ZW+29,EBP
         MOV    EAX,ZFkd
         MOV    ZW+33,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^224 X(2d,k,i+d),  [kd/16] = 14
XfftA14: 
         MOV    ECX,16[ESI]
         MOV    EBP,16[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-2,EAX
         MOV    EAX,20[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,24[ESI]
         MOV    ZW+2,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+6,ECX
;
         MOV    ECX,28[ESI]
         MOV    EBX,0[ESI]
         SBB    EAX,ECX
         MOV    ECX,4[ESI]
         MOV    ZW+10,EAX
         MOV    EAX,32[ESI]
         SBB    EBX,EAX
         MOV    EAX,8[ESI]
         SBB    ECX,EDX
         MOV    ZW+14,EBX
         MOV    ZW+18,ECX
;
         MOV    EBX,12[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+22,EAX
         SBB    EBP,EDX
         MOV    ZW+26,EBX
         SBB    ECX,EDX
         MOV    ZW+30,EBP
         MOV    EAX,ZFkd
         MOV    ZW+34,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^240 X(2d,k,i+d),  [kd/16] = 15
XfftA15: 
         MOV    ECX,16[ESI]
         MOV    EBP,16[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-1,EAX
         MOV    EAX,20[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,24[ESI]
         MOV    ZW+3,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+7,ECX
;
         MOV    ECX,28[ESI]
         MOV    EBX,0[ESI]
         SBB    EAX,ECX
         MOV    ECX,4[ESI]
         MOV    ZW+11,EAX
         MOV    EAX,32[ESI]
         SBB    EBX,EAX
         MOV    EAX,8[ESI]
         SBB    ECX,EDX
         MOV    ZW+15,EBX
         MOV    ZW+19,ECX
;
         MOV    EBX,12[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+23,EAX
         SBB    EBP,EDX
         MOV    ZW+27,EBX
         SBB    ECX,EDX
         MOV    ZW+31,EBP
         MOV    EAX,ZFkd
         MOV    ZW+35,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^256 X(2d,k,i+d),  [kd/16] = 16
XfftA16:
         MOV    EBP,16[ESI]
         MOV    EBX,0
         SUB    EAX,EBP
         MOV    EBP,20[ESI]
         MOV    ECX,0
         SBB    EBX,EBP
         MOV    EBP,24[ESI]
         MOV    ZW+0,EAX
         SBB    ECX,EBP
         MOV    ZW+4,EBX
         MOV    ZW+8,ECX
;
         MOV    EAX,0
         MOV    EBP,28[ESI]
         MOV    EBX,0[ESI]
         SBB    EAX,EBP
         MOV    EBP,32[ESI]
         MOV    ECX,4[ESI]
         SBB    EBX,EBP
         MOV    ZW+12,EAX
         SBB    ECX,EDX
         MOV    ZW+16,EBX
         MOV    ZW+20,ECX
;
         MOV    EAX,8[ESI]
         MOV    EBX,12[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+24,EAX
         SBB    ECX,EDX
         MOV    ZW+28,EBX
         MOV    EAX,ZFkd
         MOV    ZW+32,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^272 X(2d,k,i+d),  [kd/16] = 17
XfftA17:
         MOV    ECX,12[ESI]
         MOV    EBP,12[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-3,EAX
         MOV    EAX,16[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,20[ESI]
         MOV    ZW+1,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+5,ECX
;
         MOV    ECX,24[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0[ESI]
         MOV    ZW+9,EAX
         MOV    EAX,28[ESI]
         SBB    EBX,EAX
         MOV    ZW+13,EBX
         MOV    EBX,32[ESI]
         MOV    EAX,4[ESI]
         SBB    ECX,EBX
         MOV    EBX,8[ESI]
         MOV    ZW+17,ECX
;
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+21,EAX
         SBB    EBP,EDX
         MOV    ZW+25,EBX
         SBB    ECX,EDX
         MOV    ZW+29,EBP
         MOV    EAX,ZFkd
         MOV    ZW+33,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^288 X(2d,k,i+d),  [kd/16] = 18
XfftA18: 
         MOV    ECX,12[ESI]
         MOV    EBP,12[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-2,EAX
         MOV    EAX,16[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,20[ESI]
         MOV    ZW+2,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+6,ECX
;
         MOV    ECX,24[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0[ESI]
         MOV    ZW+10,EAX
         MOV    EAX,28[ESI]
         SBB    EBX,EAX
         MOV    ZW+14,EBX
         MOV    EBX,32[ESI]
         MOV    EAX,4[ESI]
         SBB    ECX,EBX
         MOV    EBX,8[ESI]
         MOV    ZW+18,ECX
;
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+22,EAX
         SBB    EBP,EDX
         MOV    ZW+26,EBX
         SBB    ECX,EDX
         MOV    ZW+30,EBP
         MOV    EAX,ZFkd
         MOV    ZW+34,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^304 X(2d,k,i+d),  [kd/16] = 19
XfftA19: 
         MOV    ECX,12[ESI]
         MOV    EBP,12[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-1,EAX
         MOV    EAX,16[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,20[ESI]
         MOV    ZW+3,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+7,ECX
;
         MOV    ECX,24[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0[ESI]
         MOV    ZW+11,EAX
         MOV    EAX,28[ESI]
         SBB    EBX,EAX
         MOV    ZW+15,EBX
         MOV    EBX,32[ESI]
         MOV    EAX,4[ESI]
         SBB    ECX,EBX
         MOV    EBX,8[ESI]
         MOV    ZW+19,ECX
;
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+23,EAX
         SBB    EBP,EDX
         MOV    ZW+27,EBX
         SBB    ECX,EDX
         MOV    ZW+31,EBP
         MOV    EAX,ZFkd
         MOV    ZW+35,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^320 X(2d,k,i+d),  [kd/16] = 20
XfftA20:
         MOV    EBP,12[ESI]
         MOV    EBX,0
         SUB    EAX,EBP
         MOV    EBP,16[ESI]
         MOV    ECX,0
         SBB    EBX,EBP
         MOV    EBP,20[ESI]
         MOV    ZW+0,EAX
         SBB    ECX,EBP
         MOV    ZW+4,EBX
         MOV    ZW+8,ECX
;
         MOV    EAX,0
         MOV    EBP,24[ESI]
         MOV    EBX,0
         SBB    EAX,EBP
         MOV    EBP,28[ESI]
         MOV    ECX,0[ESI]
         SBB    EBX,EBP
         MOV    EBP,32[ESI]
         MOV    ZW+12,EAX
         SBB    ECX,EBP
         MOV    ZW+16,EBX
         MOV    ZW+20,ECX
;
         MOV    EAX,4[ESI]
         MOV    EBX,8[ESI]
         SBB    EAX,EDX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+24,EAX
         SBB    ECX,EDX
         MOV    ZW+28,EBX
         MOV    EAX,ZFkd
         MOV    ZW+32,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^336 X(2d,k,i+d),  [kd/16] = 21
XfftA21:
         MOV    ECX,8[ESI]
         MOV    EBP,8[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-3,EAX
         MOV    EAX,12[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,16[ESI]
         MOV    ZW+1,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+5,ECX
;
         MOV    ECX,20[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+9,EAX
         MOV    EAX,24[ESI]
         SBB    EBX,EAX
         MOV    ZW+13,EBX
         MOV    EAX,0[ESI]
         MOV    EBX,28[ESI]
         SBB    ECX,EBX
         MOV    EBX,4[ESI]
         MOV    ZW+17,ECX
;
         MOV    ECX,32[ESI]
         SBB    EAX,ECX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+21,EAX
         SBB    EBP,EDX
         MOV    ZW+25,EBX
         SBB    ECX,EDX
         MOV    ZW+29,EBP
         MOV    EAX,ZFkd
         MOV    ZW+33,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^352 X(2d,k,i+d),  [kd/16] = 22
XfftA22: 
         MOV    ECX,8[ESI]
         MOV    EBP,8[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-2,EAX
         MOV    EAX,12[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,16[ESI]
         MOV    ZW+2,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+6,ECX
;
         MOV    ECX,20[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+10,EAX
         MOV    EAX,24[ESI]
         SBB    EBX,EAX
         MOV    ZW+14,EBX
         MOV    EAX,0[ESI]
         MOV    EBX,28[ESI]
         SBB    ECX,EBX
         MOV    EBX,4[ESI]
         MOV    ZW+18,ECX
;
         MOV    ECX,32[ESI]
         SBB    EAX,ECX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+22,EAX
         SBB    EBP,EDX
         MOV    ZW+26,EBX
         SBB    ECX,EDX
         MOV    ZW+30,EBP
         MOV    EAX,ZFkd
         MOV    ZW+34,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^368 X(2d,k,i+d),  [kd/16] = 23
XfftA23: 
         MOV    ECX,8[ESI]
         MOV    EBP,8[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-1,EAX
         MOV    EAX,12[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,16[ESI]
         MOV    ZW+3,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+7,ECX
;
         MOV    ECX,20[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+11,EAX
         MOV    EAX,24[ESI]
         SBB    EBX,EAX
         MOV    ZW+15,EBX
         MOV    EAX,0[ESI]
         MOV    EBX,28[ESI]
         SBB    ECX,EBX
         MOV    EBX,4[ESI]
         MOV    ZW+19,ECX
;
         MOV    ECX,32[ESI]
         SBB    EAX,ECX
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+23,EAX
         SBB    EBP,EDX
         MOV    ZW+27,EBX
         SBB    ECX,EDX
         MOV    ZW+31,EBP
         MOV    EAX,ZFkd
         MOV    ZW+35,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^384 X(2d,k,i+d),  [kd/16] = 24
XfftA24:
         MOV    EBP,8[ESI]
         MOV    EBX,0
         SUB    EAX,EBP
         MOV    EBP,12[ESI]
         MOV    ECX,0
         SBB    EBX,EBP
         MOV    EBP,16[ESI]
         MOV    ZW+0,EAX
         SBB    ECX,EBP
         MOV    ZW+4,EBX
         MOV    ZW+8,ECX
;
         MOV    EAX,0
         MOV    EBP,20[ESI]
         MOV    EBX,0
         SBB    EAX,EBP
         MOV    EBP,24[ESI]
         MOV    ECX,0
         SBB    EBX,EBP
         MOV    EBP,28[ESI]
         MOV    ZW+12,EAX
         SBB    ECX,EBP
         MOV    ZW+16,EBX
         MOV    ZW+20,ECX
;
         MOV    EAX,0[ESI]
         MOV    EBP,32[ESI]
         MOV    EBX,4[ESI]
         SBB    EAX,EBP
         MOV    ECX,0
         SBB    EBX,EDX
         MOV    ZW+24,EAX
         SBB    ECX,EDX
         MOV    ZW+28,EBX
         MOV    EAX,ZFkd
         MOV    ZW+32,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^400 X(2d,k,i+d),  [kd/16] = 25
XfftA25:
         MOV    ECX,4[ESI]
         MOV    EBP,4[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-3,EAX
         MOV    EAX,8[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,12[ESI]
         MOV    ZW+1,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+5,ECX
;
         MOV    ECX,16[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+9,EAX
         MOV    EAX,20[ESI]
         SBB    EBX,EAX
         MOV    ZW+13,EBX
         MOV    EBX,24[ESI]
         MOV    EAX,0
         SBB    ECX,EBX
         MOV    EBX,0[ESI]
         MOV    ZW+17,ECX
;
         MOV    ECX,28[ESI]
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+21,EAX
         MOV    EAX,32[ESI]
         SBB    EBX,EAX
         SBB    EBP,EDX
         MOV    ZW+25,EBX
         SBB    ECX,EDX
         MOV    ZW+29,EBP
         MOV    EAX,ZFkd
         MOV    ZW+33,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^416 X(2d,k,i+d),  [kd/16] = 26
XfftA26: 
         MOV    ECX,4[ESI]
         MOV    EBP,4[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-2,EAX
         MOV    EAX,8[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,12[ESI]
         MOV    ZW+2,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+6,ECX
;
         MOV    ECX,16[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+10,EAX
         MOV    EAX,20[ESI]
         SBB    EBX,EAX
         MOV    ZW+14,EBX
         MOV    EBX,24[ESI]
         MOV    EAX,0
         SBB    ECX,EBX
         MOV    EBX,0[ESI]
         MOV    ZW+18,ECX
;
         MOV    ECX,28[ESI]
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+22,EAX
         MOV    EAX,32[ESI]
         SBB    EBX,EAX
         SBB    EBP,EDX
         MOV    ZW+26,EBX
         SBB    ECX,EDX
         MOV    ZW+30,EBP
         MOV    EAX,ZFkd
         MOV    ZW+34,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^432 X(2d,k,i+d),  [kd/16] = 27
XfftA27: 
         MOV    ECX,4[ESI]
         MOV    EBP,4[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-1,EAX
         MOV    EAX,8[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,12[ESI]
         MOV    ZW+3,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+7,ECX
;
         MOV    ECX,16[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+11,EAX
         MOV    EAX,20[ESI]
         SBB    EBX,EAX
         MOV    ZW+15,EBX
         MOV    EBX,24[ESI]
         MOV    EAX,0
         SBB    ECX,EBX
         MOV    EBX,0[ESI]
         MOV    ZW+19,ECX
;
         MOV    ECX,28[ESI]
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+23,EAX
         MOV    EAX,32[ESI]
         SBB    EBX,EAX
         SBB    EBP,EDX
         MOV    ZW+27,EBX
         SBB    ECX,EDX
         MOV    ZW+31,EBP
         MOV    EAX,ZFkd
         MOV    ZW+35,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^448 X(2d,k,i+d),  [kd/16] = 28
XfftA28:
         MOV    EBP,4[ESI]
         MOV    EBX,0
         SUB    EAX,EBP
         MOV    EBP,8[ESI]
         MOV    ECX,0
         SBB    EBX,EBP
         MOV    EBP,12[ESI]
         MOV    ZW+0,EAX
         SBB    ECX,EBP
         MOV    ZW+4,EBX
         MOV    ZW+8,ECX
;
         MOV    EAX,0
         MOV    EBP,16[ESI]
         MOV    EBX,0
         SBB    EAX,EBP
         MOV    EBP,20[ESI]
         MOV    ECX,0
         SBB    EBX,EBP
         MOV    EBP,24[ESI]
         MOV    ZW+12,EAX
         SBB    ECX,EBP
         MOV    ZW+16,EBX
         MOV    ZW+20,ECX
;
         MOV    EAX,0
         MOV    EBP,28[ESI]
         MOV    EBX,0[ESI]
         SBB    EAX,EBP
         MOV    EBP,32[ESI]
         MOV    ECX,0
         SBB    EBX,EBP
         MOV    ZW+24,EAX
         SBB    ECX,EDX
         MOV    ZW+28,EBX
         MOV    EAX,ZFkd
         MOV    ZW+32,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^464 X(2d,k,i+d),  [kd/16] = 29
XfftA29:
         MOV    ECX,0[ESI]
         MOV    EBP,0[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-3,EAX
         MOV    EAX,4[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,8[ESI]
         MOV    ZW+1,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+5,ECX
;
         MOV    ECX,12[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+9,EAX
         MOV    EAX,16[ESI]
         SBB    EBX,EAX
         MOV    ZW+13,EBX
         MOV    EAX,0
         MOV    EBX,20[ESI]
         SBB    ECX,EBX
         MOV    EBX,0
         MOV    ZW+17,ECX
;
         MOV    ECX,24[ESI]
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+21,EAX
         MOV    EAX,28[ESI]
         SBB    EBX,EAX
         MOV    EAX,32[ESI]
         MOV    ZW+25,EBX
         SBB    EBP,EAX
         SBB    ECX,EDX
         MOV    ZW+29,EBP
         MOV    EAX,ZFkd
         MOV    ZW+33,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^480 X(2d,k,i+d),  [kd/16] = 30
XfftA30: 
         MOV    ECX,0[ESI]
         MOV    EBP,0[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-2,EAX
         MOV    EAX,4[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,8[ESI]
         MOV    ZW+2,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+6,ECX
;
         MOV    ECX,12[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+10,EAX
         MOV    EAX,16[ESI]
         SBB    EBX,EAX
         MOV    ZW+14,EBX
         MOV    EAX,0
         MOV    EBX,20[ESI]
         SBB    ECX,EBX
         MOV    EBX,0
         MOV    ZW+18,ECX
;
         MOV    ECX,24[ESI]
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+22,EAX
         MOV    EAX,28[ESI]
         SBB    EBX,EAX
         MOV    EAX,32[ESI]
         MOV    ZW+26,EBX
         SBB    EBP,EAX
         SBB    ECX,EDX
         MOV    ZW+30,EBP
         MOV    EAX,ZFkd
         MOV    ZW+34,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;
; W = G^496 X(2d,k,i+d),  [kd/16] = 31
XfftA31: 
         MOV    ECX,0[ESI]
         MOV    EBP,0[ESI]
         AND    ECX,0FF000000h
         AND    EBP,000FFFFFFh
         SUB    EAX,ECX
         MOV    EBX,0
         MOV    ZW-1,EAX
         MOV    EAX,4[ESI]
         MOV    ECX,0
         SBB    EBX,EAX
         MOV    EAX,8[ESI]
         MOV    ZW+3,EBX
         SBB    ECX,EAX
         MOV    EAX,0
         MOV    ZW+7,ECX
;
         MOV    ECX,12[ESI]
         MOV    EBX,0
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+11,EAX
         MOV    EAX,16[ESI]
         SBB    EBX,EAX
         MOV    ZW+15,EBX
         MOV    EAX,0
         MOV    EBX,20[ESI]
         SBB    ECX,EBX
         MOV    EBX,0
         MOV    ZW+19,ECX
;
         MOV    ECX,24[ESI]
         SBB    EAX,ECX
         MOV    ECX,0
         MOV    ZW+23,EAX
         MOV    EAX,28[ESI]
         SBB    EBX,EAX
         MOV    EAX,32[ESI]
         MOV    ZW+27,EBX
         SBB    EBP,EAX
         SBB    ECX,EDX
         MOV    ZW+31,EBP
         MOV    EAX,ZFkd
         MOV    ZW+35,ECX
;
         TEST   AL,15
         JZ     XfftAsub
         JMP    XfftAshl
;====================================================
; Reduce X(i) modulo F, i = 0, 1, ..., 511
;
; Before:  -2^287 < X(i) < 2^287
; After:   0 <= X(i) <= 2^256  
;
; Let X = X(i) = A + 2^256 B
;
; If X >= 0 then X = A - B (mod F)
;           If A - B < 0 then add 2^256 + 1
;
; If X <  0 then X = A + 2^256 B - 2^288
;                  = A + 2^32 - B (mod F)
;
XfftR:   mov    EDI,ZXptr
         add    EDI,1023*LnF
;
XfftRb:  MOV    EAX,32[EDI]
         MOV    dword ptr 32+[EDI],0
         CMP    EAX,0
         JE     XfftRx
         JL     XfftRn
; X(i) >= 0
         SUB    0[EDI],EAX
         JNC    XfftRx
         SBB    dword ptr 4[EDI],0
         JNC    XfftRx
         SBB    dword ptr 8[EDI],0
         JNC    XfftRx
         SBB    dword ptr 12[EDI],0
         JNC    XfftRx
         SBB    dword ptr 16[EDI],0
         JNC    XfftRx
         SBB    dword ptr 20[EDI],0
         JNC    XfftRx
         SBB    dword ptr 24[EDI],0
         JNC    XfftRx
         SBB    dword ptr 28[EDI],0
         JNC    XfftRx
         ADC    dword ptr 0[EDI],0
         JNC    XfftRx
         ADC    dword ptr 4[EDI],0
         JNC    XfftRx
XfftRg:  ADC    dword ptr 8[EDI],0
         JNC    XfftRx
         ADC    dword ptr 12[EDI],0
         JNC    XfftRx
         ADC    dword ptr 16[EDI],0
         JNC    XfftRx
         ADC    dword ptr 20[EDI],0
         JNC    XfftRx
         ADC    dword ptr 24[EDI],0
         JNC    XfftRx
         ADC    dword ptr 28[EDI],0
         JNC    XfftRx
; Must be  a + 2^256,  a < 2^32 
         ADC    dword ptr 32[EDI],0
         TEST   dword ptr 0[EDI],0FFFFFFFFh
         JZ     XfftRx
         DEC    dword ptr 0[EDI]
         MOV    dword ptr 32[EDI],0
         JMP    XfftRx
; X(i) < 0
XfftRn:  SUB    0[EDI],EAX
         JC     XfftRx
         ADD    dword ptr 4[EDI],1
         JC     XfftRg
;
XfftRx:  MOV    EAX,ZXptr
         SUB    EDI,LnF
         cmp    EDI,EAX
         JNL    XfftRb
         RETN
;====================================================
; Determine X(i) from X(i) modulo F and D, 
; i = 0, 1, ..., 1022
;
; Before:  -2^287 < X(i) < 2^287
; After:   0 <= X(i) <= 2^265, 1024|X(i)  
;
; As XfftR except that we must add  b(2^256 + 1) 
; if  X(i) = -b (mod 1024)
;
XfftS:   mov    EDI,ZXptr
         add    EDI,1022*LnF
;
XfftSb:  MOV    EAX,32[EDI]
         MOV    dword ptr 32[EDI],0
         CMP    EAX,0
         JE     XfftSt
         JL     XfftSn
; X(i) >= 0
         SUB    0[EDI],EAX
         JNC    XfftSt
         SBB    dword ptr 4[EDI],0
         JNC    XfftSt
         SBB    dword ptr 8[EDI],0
         JNC    XfftSt
         SBB    dword ptr 12[EDI],0
         JNC    XfftSt
         SBB    dword ptr 16[EDI],0
         JNC    XfftSt
         SBB    dword ptr 20[EDI],0
         JNC    XfftSt
         SBB    dword ptr 24[EDI],0
         JNC    XfftSt
         SBB    dword ptr 28[EDI],0
         JNC    XfftSt
         ADC    dword ptr 0[EDI],0
         JNC    XfftSt
         ADC    dword ptr 4[EDI],0
         JNC    XfftSt
XfftSg:  ADC    dword ptr 8[EDI],0
         JNC    XfftSt
         ADC    dword ptr 12[EDI],0
         JNC    XfftSt
         ADC    dword ptr 16[EDI],0
         JNC    XfftSt
         ADC    dword ptr 20[EDI],0
         JNC    XfftSt
         ADC    dword ptr 24[EDI],0
         JNC    XfftSt
         ADC    dword ptr 28[EDI],0
         JNC    XfftSt
; Must be  a + 2^256,  a < 2^32 
         ADC    dword ptr 32[EDI],0
         TEST   dword ptr 0[EDI],0FFFFFFFFh
         JZ     XfftSx
         DEC    dword ptr 0[EDI]
         MOV    dword ptr 32[EDI],0
         JMP    XfftSt
; X(i) < 0
XfftSn:  SUB    0[EDI],EAX
         JC     XfftSt
         ADD    dword ptr 4[EDI],1
         JC     XfftSg
;
XfftSt:  MOV    EAX,0[EDI]
         AND    EAX,1023
         JZ     XfftSx
         NEG    EAX
         ADD    EAX,1024
         ADD    32[EDI],EAX
         ADD    0[EDI],EAX
         JNC    XfftSx
         ADC    dword ptr 4[EDI],0
         JNC    XfftSx
         ADC    dword ptr 8[EDI],0
         JNC    XfftSx
         ADC    dword ptr 12[EDI],0
         JNC    XfftSx
         ADC    dword ptr 16[EDI],0
         JNC    XfftSx
         ADC    dword ptr 20[EDI],0
         JNC    XfftSx
         ADC    dword ptr 24[EDI],0
         ADC    dword ptr 28[EDI],0
         ADC    dword ptr 32[EDI],0
XfftSx:  MOV    EAX,ZXptr
         SUB    EDI,LnF
         cmp    EDI,EAX
         JNL    XfftSb
         RETN
;====================================================
; X(i) => X(i)^2
;
; 0 <= X(i) <= 2^256
; ZX[ESI] -> X(i),  ZX[EDI] -> X(i)^2
;
XfftQ:   MOV    ZSc,2*(1024+17)
XfftQb:  MOV    EBX,ZSc
         MOV    DI,Tq[EBX]
         MOV    SI,Tq-2[EBX]
         mov    EAX,ZXptr
         AND    EDI,0FFFFh
         AND    ESI,0FFFFh
         CMP    EDI,Lk4
         lea    EDI,[EDI+EAX]
         lea    ESI,[ESI+EAX]
         JE     XfftQs
         TEST   BYTE PTR[32+ESI],1
         JNZ    XfftQu
;-1  0  7 
  MOV  EAX,0[ESI]
  MOV  EDX,28[ESI]
  MOV  ECX,0
  MOV  EBX,0
  MUL  EDX
  MOV  EBP,EAX
  SUB  ECX,EDX
  SBB  EBX,0
  ADD  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
;-1  1  6 
  MOV  EAX,4[ESI]
  MOV  EDX,24[ESI]
  MUL  EDX
  ADD  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
  ADD  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
;-1  2  5 
  MOV  EAX,8[ESI]
  MOV  EDX,20[ESI]
  MUL  EDX
  ADD  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
  ADD  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
;-1  3  4 
  MOV  EAX,12[ESI]
  MOV  EDX,16[ESI]
  MUL  EDX
  ADD  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
  ADD  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
  MOV  ZW,EBP
; 0  0  0 
  MOV  EAX,0[ESI]
  MOV  EBP,EBX
  MUL  EAX
  SAR  EBP,31
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
; 0  7  1 
  MOV  EAX,28[ESI]
  MOV  EDX,4[ESI]
  MUL  EDX
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
; 0  6  2 
  MOV  EAX,24[ESI]
  MOV  EDX,8[ESI]
  MUL  EDX
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
; 0  5  3 
  MOV  EAX,20[ESI]
  MOV  EDX,12[ESI]
  MUL  EDX
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
; 0  4  4 
  MOV  EAX,16[ESI]
  MUL  EAX
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
  MOV  0 [EDI],ECX
; 1  0  1 
  MOV  EAX,0[ESI]
  MOV  EDX,4[ESI]
  MOV  ECX,EBP
  MUL  EDX
  SAR  ECX,31
  ADD  EBX,EAX
  ADC  EBP,EDX
  ADC  ECX,0
  ADD  EBX,EAX
  ADC  EBP,EDX
  ADC  ECX,0
; 1  7  2 
  MOV  EAX,28[ESI]
  MOV  EDX,8[ESI]
  MUL  EDX
  SUB  EBX,EAX
  SBB  EBP,EDX
  SBB  ECX,0
  SUB  EBX,EAX
  SBB  EBP,EDX
  SBB  ECX,0
; 1  6  3 
  MOV  EAX,24[ESI]
  MOV  EDX,12[ESI]
  MUL  EDX
  SUB  EBX,EAX
  SBB  EBP,EDX
  SBB  ECX,0
  SUB  EBX,EAX
  SBB  EBP,EDX
  SBB  ECX,0
; 1  5  4 
  MOV  EAX,20[ESI]
  MOV  EDX,16[ESI]
  MUL  EDX
  SUB  EBX,EAX
  SBB  EBP,EDX
  SBB  ECX,0
  SUB  EBX,EAX
  SBB  EBP,EDX
  SBB  ECX,0
  MOV  4 [EDI],EBX
; 2  0  2 
  MOV  EAX,0[ESI]
  MOV  EDX,8[ESI]
  MOV  EBX,ECX
  MUL  EDX
  SAR  EBX,31
  ADD  EBP,EAX
  ADC  ECX,EDX
  ADC  EBX,0
  ADD  EBP,EAX
  ADC  ECX,EDX
  ADC  EBX,0
; 2  1  1 
  MOV  EAX,4[ESI]
  MUL  EAX
  ADD  EBP,EAX
  ADC  ECX,EDX
  ADC  EBX,0
; 2  7  3 
  MOV  EAX,28[ESI]
  MOV  EDX,12[ESI]
  MUL  EDX
  SUB  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
  SUB  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
; 2  6  4 
  MOV  EAX,24[ESI]
  MOV  EDX,16[ESI]
  MUL  EDX
  SUB  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
  SUB  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
; 2  5  5 
  MOV  EAX,20[ESI]
  MUL  EAX
  SUB  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
  MOV  8 [EDI],EBP
; 3  0  3 
  MOV  EAX,0[ESI]
  MOV  EDX,12[ESI]
  MOV  EBP,EBX
  MUL  EDX
  SAR  EBP,31
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
; 3  1  2 
  MOV  EAX,4[ESI]
  MOV  EDX,8[ESI]
  MUL  EDX
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
; 3  7  4 
  MOV  EAX,28[ESI]
  MOV  EDX,16[ESI]
  MUL  EDX
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
; 3  6  5 
  MOV  EAX,24[ESI]
  MOV  EDX,20[ESI]
  MUL  EDX
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
  SUB  ECX,EAX
  SBB  EBX,EDX
  SBB  EBP,0
  MOV  12 [EDI],ECX
; 4  0  4 
  MOV  EAX,0[ESI]
  MOV  EDX,16[ESI]
  MOV  ECX,EBP
  MUL  EDX
  SAR  ECX,31
  ADD  EBX,EAX
  ADC  EBP,EDX
  ADC  ECX,0
  ADD  EBX,EAX
  ADC  EBP,EDX
  ADC  ECX,0
; 4  1  3 
  MOV  EAX,4[ESI]
  MOV  EDX,12[ESI]
  MUL  EDX
  ADD  EBX,EAX
  ADC  EBP,EDX
  ADC  ECX,0
  ADD  EBX,EAX
  ADC  EBP,EDX
  ADC  ECX,0
; 4  2  2 
  MOV  EAX,8[ESI]
  MUL  EAX
  ADD  EBX,EAX
  ADC  EBP,EDX
  ADC  ECX,0
; 4  7  5 
  MOV  EAX,28[ESI]
  MOV  EDX,20[ESI]
  MUL  EDX
  SUB  EBX,EAX
  SBB  EBP,EDX
  SBB  ECX,0
  SUB  EBX,EAX
  SBB  EBP,EDX
  SBB  ECX,0
; 4  6  6 
  MOV  EAX,24[ESI]
  MUL  EAX
  SUB  EBX,EAX
  SBB  EBP,EDX
  SBB  ECX,0
  MOV  16 [EDI],EBX
; 5  0  5 
  MOV  EAX,0[ESI]
  MOV  EDX,20[ESI]
  MOV  EBX,ECX
  MUL  EDX
  SAR  EBX,31
  ADD  EBP,EAX
  ADC  ECX,EDX
  ADC  EBX,0
  ADD  EBP,EAX
  ADC  ECX,EDX
  ADC  EBX,0
; 5  1  4 
  MOV  EAX,4[ESI]
  MOV  EDX,16[ESI]
  MUL  EDX
  ADD  EBP,EAX
  ADC  ECX,EDX
  ADC  EBX,0
  ADD  EBP,EAX
  ADC  ECX,EDX
  ADC  EBX,0
; 5  2  3 
  MOV  EAX,8[ESI]
  MOV  EDX,12[ESI]
  MUL  EDX
  ADD  EBP,EAX
  ADC  ECX,EDX
  ADC  EBX,0
  ADD  EBP,EAX
  ADC  ECX,EDX
  ADC  EBX,0
; 5  7  6 
  MOV  EAX,28[ESI]
  MOV  EDX,24[ESI]
  MUL  EDX
  SUB  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
  SUB  EBP,EAX
  SBB  ECX,EDX
  SBB  EBX,0
  MOV  20 [EDI],EBP
; 6  0  6 
  MOV  EAX,0[ESI]
  MOV  EBP,EBX
  MOV  EDX,24[ESI]
  SAR  EBP,31
  ADD  EBX,ZW
  ADC  EBP,0
  MUL  EDX
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
; 6  1  5 
  MOV  EAX,4[ESI]
  MOV  EDX,20[ESI]
  MUL  EDX
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
; 6  2  4 
  MOV  EAX,8[ESI]
  MOV  EDX,16[ESI]
  MUL  EDX
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
; 6  3  3 
  MOV  EAX,12[ESI]
  MUL  EAX
  ADD  ECX,EAX
  ADC  EBX,EDX
  ADC  EBP,0
; 6  7  7 
  MOV  EAX,28[ESI]
  MUL  EAX
  SUB  ECX,EAX
  SBB  EBX,EDX
  MOV  24[EDI],ECX
  SBB  EBP,0
  MOV  28[EDI],EBX
  MOV  32[EDI],EBP
; 486 clock ticks: 760 
XfftQk:  SUB    ZSc,2
         JNZ    XfftQb
         RETN
;
; Start of cycle
XfftQs:  MOV    EAX,0[ESI]
         MOV    EBX,4[ESI]
         MOV    ECX,8[ESI]
         MOV    0[EDI],EAX
         MOV    4[EDI],EBX
         MOV    8[EDI],ECX
         MOV    EAX,12[ESI]
         MOV    EBX,16[ESI]
         MOV    ECX,20[ESI]
         MOV    12[EDI],EAX
         MOV    16[EDI],EBX
         MOV    20[EDI],ECX
         MOV    EAX,24[ESI]
         MOV    EBX,28[ESI]
         MOV    ECX,32[ESI]
         MOV    24[EDI],EAX
         MOV    28[EDI],EBX
         MOV    32[EDI],ECX
         JMP    XfftQk
;
; (2^256)^2 = 1 (mod F)
XfftQu:  MOV    dword ptr 0[EDI],1
         MOV    dword ptr 4[EDI],0
         MOV    dword ptr 8[EDI],0
         MOV    dword ptr 12[EDI],0
         MOV    dword ptr 16[EDI],0
         MOV    dword ptr 20[EDI],0
         MOV    dword ptr 24[EDI],0
         MOV    dword ptr 28[EDI],0
         MOV    dword ptr 32[EDI],0
         JMP    XfftQk
;====================================================
;
_AR2F8AA endp
_TEXT    ends
         end
